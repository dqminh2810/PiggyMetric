server:
  port: ${SPRING_APPLICATION_PORT}

logging:
  level:
    root: INFO
    org.springframework.web: INFO
    org.springframework.security: INFO
    org.springframework.security.oauth2: INFO

spring:
  application:
    name: ${SPRING_APPLICATION_NAME}
  data:
    mongodb:
      host: ${MONGO_DB_HOST}
      port: ${MONGO_DB_PORT}
      username: ${MONGO_DB_USERNAME}
      password: ${MONGO_DB_PASSWORD}
      database: ${MONGO_DB}
  security:
    oauth2:
      client:
        registration:
#          accounts-client-client-credentials:
#            provider: spring
#            client-name: accounts-client-client-credentials
#            client-id: accounts-client
#            client-secret: secret
#            authorization-grant-type: client_credentials
#            scope: accounts.read,accounts.write
#
          accounts-client-oauth2:
            provider: spring
            client-name: ${OAUTH2_CLIENT_NAME}
            client-id: ${OAUTH2_CLIENT_ID}
            client-secret: ${OAUTH2_CLIENT_SECRET}
            client-authorization-method: ${OAUTH2_CLIENT_AUTHENTICATION_METHOD}
            authorization-grant-type: ${OAUTH2_CLIENT_AUTHORIZATION_GRANT_TYPE}
            redirect-uri: ${OAUTH2_CLIENT_REDIRECT_URI}
            scope: ${OAUTH2_CLIENT_SCOPE}
        provider:
          spring:
            issuer-uri: ${OAUTH2_PROVIDER_ISSUER_URI}
#            token-uri: http://localhost:9000/oauth2/token
#            authorization-uri: http://localhost:9000/oauth2/authorize
accounts:
  base-uri: http://127.0.0.1:8080/accounts

feign:
  client:
    config:
      default:
        loggerLevel: full